-querySelector will return a node list


-arrow function vs reg function: 
        reg:    
                        const fifteen = inventors.filter(inventor) {
                if(inventor.year >= 1500 && inventor.year < 1600) {
                    return true;
                }
                })
                console.table(fifteen);
        
        
        arrow:
    const fifteen = inventors.filter (inventor => inventor.year >= 1500 && inventor.year < 1600)
      
    console.table(fifteen);

-what does map do?
    map takes in an array, does something in that array, returns new array
    factory machine that takes raw item and returns new version



-- 2 diff syntax:
    // 2. Give us an array of the inventors' first and last names
          const fullName1 = inventors.map(inventor => inventor.first + ' ' + inventor.last);
          console.log(fullName1)
          //other version
          const fullName2 = inventors.map(inventor => `${inventor.first} ${inventor.last}`);
          console.log(fullName2)

-- 2 diff syntax:   
        const ordered = inventors. sort((a, b) => a.year > b.year ? 1 : -1);

                  const ordered = inventors.sort(function(firstPerson, secondPerson) {
            if (firstPerson.year > secondPerson.year) {
              return 1;
            } else {
              return -1;
            }
            
          });



-- 2 diff syntax:   
    messier:
        var totalYears = 0;

        for (var i = 0; i < inventors.length; i++){
            totalYears += inventors[i].year
        }

    cleaner:


        --reduce gives running total of what it returned from function last time


--how to change node list into an array
        can wrap whole thing in Array.from
        or create array, use [...] spread to take every item out and put into array



--sorting: (1, -1)
          const alpha = people.sort(function (lastOne, nextOne){
      const [aLast, aFirst] = lastOne.split(', ');
      const [bLast, bFirst] = nextOne.split(', ');
      return aLast > bLast ? -1 : 1;
    });